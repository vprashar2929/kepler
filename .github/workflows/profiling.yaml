name: Profiling Report
on:
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  build_and_profile:
    runs-on: ubuntu-latest
    steps:
      - name: Install Graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Build Kepler
        run: |
          make build

      - name: Enable fake cpu meter
        shell: bash
        run: |
          sed -i '/fake-cpu-meter:/{n;s/enabled: false/enabled: true/}' hack/config.yaml

      - name: Run Kepler in the background
        run: |
          nohup sudo ./bin/kepler --config.file=hack/config.yaml > kepler.log 2>&1 &

      - name: Run profiling script
        run: |
          ./hack/reports/profiling.sh

      - name: Upload CPU profiling artifact
        uses: actions/upload-artifact@v4
        with:
          name: cpu-profile-${{ github.event.pull_request.number }}
          path: ./tmp/cpu-profile
          retention-days: 5 # Keep artifact for 5 days

      - name: Upload Memory profiling artifact
        uses: actions/upload-artifact@v4
        with:
          name: mem-profile-${{ github.event.pull_request.number }}
          path: ./tmp/mem-profile
          retention-days: 5 # Keep artifact for 5 days

      - name: Run must gather
        shell: bash
        run: |
          echo "::group::Get logs for kepler"
          cat kepler.log || true
          echo "::endgroup::"

          echo "::group::Fetch metrics from localhost:28282"
          curl -s http://localhost:28282/metrics || true
          echo "::endgroup::"

  deploy_and_comment:
    runs-on: ubuntu-latest
    needs: build_and_profile
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download CPU profiling artifact
        uses: actions/download-artifact@v4
        with:
          name: cpu-profile-${{ github.event.pull_request.number }}
          path: ./tmp/cpu-profile

      - name: Download Memory profiling artifact
        uses: actions/download-artifact@v4
        with:
          name: mem-profile-${{ github.event.pull_request.number }}
          path: ./tmp/mem-profile

      - name: Generate comment messages
        id: generate_message
        run: |
          {
            echo "message<<EOF"
            echo "Profiling reports are ready to be viewed."
            echo ""
            echo "CPU Profiling Artifact:"
            echo " * Download from the [Actions Summary page](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            echo " * Artifact name: \`cpu-profile-${{ github.event.pull_request.number }}\`"
            echo ""
            echo "Memory Profiling Artifact:"
            echo " * Download from the [Actions Summary page](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            echo " * Artifact name: \`mem-profile-${{ github.event.pull_request.number }}\`"
            echo ""
            echo "Or use GitHub CLI to download artifacts:"
            echo "\`\`\`bash"
            echo "gh run download ${{ github.run_id }} -n cpu-profile-${{ github.event.pull_request.number }}"
            echo "gh run download ${{ github.run_id }} -n mem-profile-${{ github.event.pull_request.number }}"
            echo "\`\`\`"
            echo ""
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Create PR Comment with report links
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: ${{ steps.generate_message.outputs.message }}

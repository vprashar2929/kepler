name: Integration test

on:
  push:
    branches:
      - test-microshift

jobs:
  integration_test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cluster_provider: [microshift]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: use kepler action for kind cluster build
        uses: vprashar2929/kepler-action@add-change
        with:
          runningBranch: ${{matrix.cluster_provider}}
          local_dev_cluster_version: main
          cluster_provider: ${{matrix.cluster_provider}}

      - name: simple test - deploy kepler
        run: make cluster-sync
        env:
            CLUSTER_PROVIDER: ${{matrix.cluster_provider}}
            IMAGE_REPO: "localhost:5001"
            IMAGE_TAG: "devel"
            CTR_CMD: docker
            CI_ONLY: "true"
      
      # - uses: actions/checkout@v3
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: test if kepler is still alive
        run: |
          sleep 60
          kubectl logs $(kubectl -n kepler get pods -o name) -n kepler
          kubectl get all -n kepler
      
      - name: run integration_test
        run: |
          docker ps -a
          mkdir -p /tmp/.kube
          # kind get kubeconfig --name=kind > /tmp/.kube/config
          docker exec -i microshift cat /var/lib/microshift/resources/kubeadmin/kubeconfig > /tmp/.kube/config
          kubectl port-forward --address localhost $(kubectl -n kepler get pods -o name) 9102:9102 -n kepler -v7 &
          kubectl logs -n kepler daemonset/kepler-exporter
          kubectl get pods -n kepler -o yaml
          go test ./e2e/... --tags bcc -v --race --bench=. -cover --count=1 --vet=all
        env:
            kepler_address: localhost:9102

name: Integration test

on:
  push:
    branches:
      - test-add-microshift
env:
  GO_VERSION: "1.18"
  OUTPUT_DIR: "_output/"
  FILE_NAME: "kepler.tar.gz"

jobs:
  build-kepler:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{env.GO_VERSION}}
    
      - name: Build manifest
        run: make build-manifest OPTS="CI_DEPLOY"

      - name: Build and export Kepler Image
        run: |
          make build_containerized
          make save-image
        env:
          IMAGE_REPO: "localhost:5001"
          IMAGE_TAG: "devel"
          CTR_CMD: docker
          IMAGE_OUTPUT_PATH: ${{env.OUTPUT_DIR}}${{env.FILE_NAME}}

      - name: Save Kepler Image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: kepler
          path: ${{env.OUTPUT_DIR}}${{env.FILE_NAME}}

  integration-tests:
    needs: [build-kepler]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cluster_provider: [kind,microshift]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Download Kepler Image artifact
        uses: actions/download-artifact@v3
        with:
          name: kepler

      - name: Build manifest
        run: make build-manifest OPTS="CI_DEPLOY"

      - name: Import Kepler Image
        run: make load-image
        env:
          IMAGE_REPO: "localhost:5001"
          IMAGE_TAG: "devel"
          CTR_CMD: docker
          INPUT_PATH: ${{env.FILE_NAME}}
  
      - name: Use Kepler Action to deploy cluster
        uses: sustainable-computing-io/kepler-action@main
        with:
          runningBranch: ${{matrix.cluster_provider}}
          local_dev_cluster_version: main
          cluster_provider: ${{matrix.cluster_provider}}

      - name: Push Kepler Image to Load Registry
        run: |
          make push-image
          make image-prune
        env:
          IMAGE_REPO: "localhost:5001"
          IMAGE_TAG: "devel"
          CTR_CMD: docker
    
      - name: Test artifact download
        run: |
            df -kh
            docker system df
            docker images

      - name: Deploy Kepler on cluster
        run: make cluster-deploy
        env:
          CLUSTER_PROVIDER: ${{matrix.cluster_provider}}
          IMAGE_REPO: "localhost:5001"
          IMAGE_TAG: "devel"
          CTR_CMD: docker

      - name: Run e2e tests
        run: make e2e
        env:
            CLUSTER_PROVIDER: ${{matrix.cluster_provider}}
            kepler_address: localhost:9102
      
      - uses: actions/checkout@v3
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3 

name: Release

on: #yamllint disable-line rule:truthy
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+-reboot

jobs:
  release:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    env:
      IMG_BASE: quay.io/rh_ee_vprashar

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          # NOTE: setting fetch-depth to 0 to retrieve the entire history
          # instead of a shallow -clone so that all tags are fetched as well.
          # This is necessary for computing the VERSION using `git describe`
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod
          cache: true
          check-latest: true

      - name: Login to Image Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMG_BASE }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: make deps
        shell: bash
        run: make deps

      - name: Build Image
        shell: bash
        run: |
          make image

      - name: Push Image
        shell: bash
        run: |
          make push

      - name: Extract version
        shell: bash
        id: version
        run: |
          TAG_NAME=${{ github.ref_name }}
          VERSION=$(echo "$TAG_NAME" | sed 's/-reboot//')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Get previous tag
        shell: bash
        id: previous-tag
        run: |
          CURR_TAG=${{ github.ref_name }}
          PREV_TAG=$(git tag --sort=v:refname -l 'v[0-9]*.[0-9]*.[0-9]*-reboot' | grep -B1 -x "$CURR_TAG" | head -n 1)
          echo "previous_tag=$PREV_TAG" >> "$GITHUB_OUTPUT"


      - name: Generate changelog
        shell: bash
        id: changelog
        run: |
          ./hack/scripts/changelog.sh --from ${{ steps.previous-tag.outputs.previous_tag }} --to ${{ github.ref_name }} | tee changelog.md
          echo "changelog<<EOF" >> "$GITHUB_OUTPUT"
          cat changelog.md >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: release-${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
